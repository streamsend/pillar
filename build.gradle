import org.gradle.api.artifacts.maven.MavenDeployment

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'scala'
apply plugin: 'signing'

group = 'com.streamsend'
version = '1.0.1'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://repository.codehaus.org/org/codehaus/groovy'
    }
}

dependencies {
    compile "com.datastax.cassandra:cassandra-driver-core:1.0.0",
            "com.typesafe:config:1.0.1",
            "org.clapper:argot_2.10:1.0.1",
            "org.scala-lang:scala-library:2.10.1"
    testCompile "org.scalatest:scalatest_2.10:1.9.1",
            "junit:junit:4.11",
            "org.mockito:mockito-core:1.9.5"
}

task scaladocsJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/scaladocs'
}

task sourcesJar(type: Jar){
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives scaladocsJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'Pillar'
                packaging 'jar'
                description 'Pillar manages migrations for your Cassandra data stores.'
                url 'https://github.com/streamsend/pillar'

                scm {
                    url 'scm:git@github.com:streamsend/pillar.git'
                    connection 'scm:git@github.com:streamsend/pillar.git'
                    developerConnection 'scm:git@github.com:streamsend/pillar.git'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'iamsteveholmes'
                        name 'Steve Holmes'
                    }
                }
            }
        }
    }
}
